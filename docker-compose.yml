version: "3.8"

services:
  backend-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: elysia-backend-dev
    ports:
      - "${DEV_BACKEND_PORT}:3000"
    volumes:
      - .:/app
    env_file:
      - .env.dev
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: development

  backend-prod:
    build:
      context: .
      dockerfile: Dockerfile.prod
    container_name: elysia-backend-prod
    ports:
      - "${PROD_BACKEND_PORT}:3000"
    env_file:
      - .env.prod
    depends_on:
      - postgres
      - redis
    environment:
      NODE_ENV: production

  postgres:
    image: postgres:15-alpine
    container_name: elysia-postgres
    environment:
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${PG_PORT}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: elysia-redis
    ports:
      - "${REDIS_PORT}:6379"
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    depends_on:
      - postgres

volumes:
  postgres_data:
  redis_data:
